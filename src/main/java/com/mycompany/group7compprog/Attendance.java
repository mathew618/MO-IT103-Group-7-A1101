/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.group7compprog;

import javax.swing.table.DefaultTableModel;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author mathe
 */
public class Attendance extends javax.swing.JPanel {

    /**
     * Creates new form Attendance
     */
    private final TableRowSorter<TableModel> sorter;
    private static final DateTimeFormatter DATE_FORMAT = DateTimeFormatter.ofPattern("MM-dd-yyyy");
    private static final DateTimeFormatter TIME_FORMAT = DateTimeFormatter.ofPattern("HH:mm:ss");
    private static DefaultTableModel model;

    public Attendance() {
        initComponents();
        model = new DefaultTableModel(new Object[]{"Employee Number", "Employee", "Date", "Time in", "Time Out"}, 0);
        jTable1.setModel(model);

        sorter = new TableRowSorter<>(jTable1.getModel());
        jTable1.setRowSorter(sorter);  // important!

        Attend.load(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gradientPanel1 = new com.mycompany.group7compprog.GradientPanel();
        jLabel4 = new javax.swing.JLabel();
        empNameA = new javax.swing.JTextField();
        logIN = new javax.swing.JButton();
        logOut = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        MonthPicker = new javax.swing.JComboBox<>();
        empNumA = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        gradientPanel1.setColor1(new java.awt.Color(228, 255, 255));
        gradientPanel1.setColor2(new java.awt.Color(102, 204, 255));

        jLabel4.setBackground(new java.awt.Color(204, 102, 0));
        jLabel4.setFont(new java.awt.Font("Bahnschrift", 1, 24)); // NOI18N
        jLabel4.setText("â€¢ ATTENDANCE");

        empNameA.setBackground(new java.awt.Color(221, 238, 255));
        empNameA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empNameAActionPerformed(evt);
            }
        });

        logIN.setText("Log-In");
        logIN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logINActionPerformed(evt);
            }
        });

        logOut.setText("Log-Out");
        logOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Employee Number", "Name", "Date", "Time-In", "Time-Out"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Enter Employee Name:");

        MonthPicker.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        MonthPicker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonthPickerActionPerformed(evt);
            }
        });

        empNumA.setToolTipText("");

        jLabel2.setText("Enter Employee Number:");

        javax.swing.GroupLayout gradientPanel1Layout = new javax.swing.GroupLayout(gradientPanel1);
        gradientPanel1.setLayout(gradientPanel1Layout);
        gradientPanel1Layout.setHorizontalGroup(
            gradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradientPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(gradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(gradientPanel1Layout.createSequentialGroup()
                        .addComponent(empNameA, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(gradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(empNumA, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(gradientPanel1Layout.createSequentialGroup()
                        .addComponent(logIN)
                        .addGap(45, 45, 45)
                        .addComponent(logOut)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(MonthPicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8))))
            .addGroup(gradientPanel1Layout.createSequentialGroup()
                .addGroup(gradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(gradientPanel1Layout.createSequentialGroup()
                        .addGroup(gradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(gradientPanel1Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(gradientPanel1Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jLabel1)))
                        .addGap(0, 381, Short.MAX_VALUE))
                    .addGroup(gradientPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        gradientPanel1Layout.setVerticalGroup(
            gradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradientPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(gradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(4, 4, 4)
                .addGroup(gradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(empNameA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(empNumA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(gradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(logIN)
                    .addComponent(logOut)
                    .addComponent(MonthPicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                .addGap(50, 50, 50))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 622, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, 0)
                    .addComponent(gradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, 0)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 420, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, 0)
                    .addComponent(gradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, 0)))
        );
    }// </editor-fold>//GEN-END:initComponents


    private void empNameAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empNameAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_empNameAActionPerformed

    private void logINActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logINActionPerformed
        // TODO add your handling code here:
        String name = empNameA.getText().trim();
        String empNo = empNumA.getText().trim();

        if (!Attend.checkInput(name, empNo)) {
            return;
        }

        LocalDate date = LocalDate.now();
        LocalTime timeIn = LocalTime.now();

        model.addRow(new Object[]{
            empNo,
            name,
            date.format(DATE_FORMAT),
            timeIn.format(TIME_FORMAT),
            ""
        });

        // Clear button action: clears both employee number and name fields 
        empNumA.setText(""); // Clear employee number field
        empNameA.setText(""); // Clear name field
    }//GEN-LAST:event_logINActionPerformed

    private void MonthPickerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonthPickerActionPerformed
        String selected = (String) MonthPicker.getSelectedItem();

        if ("All".equals(selected)) {
            sorter.setRowFilter(null);
        } else {
            int monthIndex = MonthPicker.getSelectedIndex() - 1; // Subtract 1 for Jan = 0

            sorter.setRowFilter(new RowFilter<TableModel, Integer>() {
                @Override
                public boolean include(RowFilter.Entry<? extends TableModel, ? extends Integer> entry) {
                    try {
                        String dateString = entry.getStringValue(2); // 3rd column = Date
                        LocalDate date = LocalDate.parse(dateString, DATE_FORMAT);
                        return date.getMonthValue() == (monthIndex + 1); // back to 1â€“12
                    } catch (Exception e) {
                        return false;
                    }
                }
            });
        }
    }//GEN-LAST:event_MonthPickerActionPerformed

    private void logOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutActionPerformed
        // TODO add your handling code here:
        String name = empNameA.getText().trim();
        String empNo = empNumA.getText().trim();

        if (!Attend.checkInput(name, empNo)) {
            return;
        }

        // Get current date and time for logging out
        LocalDate today = LocalDate.now();
        LocalTime timeOut = LocalTime.now();

        for (int i = 0; i < model.getRowCount(); i++) {
            String rowEmpNo = model.getValueAt(i, 0).toString();
            String rowName = model.getValueAt(i, 1).toString();
            String rowDate = model.getValueAt(i, 2).toString();
            String rowTimeOut = model.getValueAt(i, 4).toString();

            if (rowDate.equals(today.format(DATE_FORMAT))
                    && rowName.equals(name)
                    && rowEmpNo.equals(empNo)
                    && rowTimeOut.isEmpty()) {

                model.setValueAt(timeOut.format(TIME_FORMAT), i, 4);
                JOptionPane.showMessageDialog(null, "Logged out successfully!");
                empNameA.setText("");
                empNumA.setText("");
                return;
            }
        }
        // If no matching record is found
        JOptionPane.showMessageDialog(null, "No matching login record found for logout.");
    }//GEN-LAST:event_logOutActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> MonthPicker;
    private javax.swing.JTextField empNameA;
    private javax.swing.JTextField empNumA;
    private com.mycompany.group7compprog.GradientPanel gradientPanel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton logIN;
    private javax.swing.JButton logOut;
    // End of variables declaration//GEN-END:variables
}
